{"ast":null,"code":"var _jsxFileName = \"/Users/yavuzhanis/Desktop/candyCrush-react/candy-crush/src/App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst width = 8;\nconst candyColors = ['blue', 'green', 'yellow', 'orange', 'red', 'purple'];\nfunction App() {\n  _s();\n  const [currentColorArrangament, setCurrentColorArrangament] = useState([]);\n  const checkForColumnOfFour = () => {\n    for (let i = 0; i < 39; i++) {\n      const columnOfFour = [i, i + width, i + width * 2, i + width * 3];\n      const decidedColor = currentColorArrangament[i];\n      if (columnOfFour.every(square => currentColorArrangament[square] === decidedColor)) {\n        columnOfFour.forEach(square => currentColorArrangament[square] = '');\n      }\n    }\n  };\n  const checkForRowOfFour = () => {\n    for (let i = 0; i < 64; i++) {\n      const rowOfFour = [i, i + 1, i + 2, i + 3];\n      const decidedColor = currentColorArrangament[i];\n      const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64];\n      if (notValid.includes(i)) continue;\n      if (rowOfFour.every(square => currentColorArrangament[square] === decidedColor)) {\n        rowOfFour.forEach(square => currentColorArrangament[square] = '');\n      }\n    }\n  };\n  const checkForColumnOfThree = () => {\n    for (let i = 0; i < 47; i++) {\n      const columnOfThree = [i, i + width, i + width * 2];\n      const decidedColor = currentColorArrangament[i];\n      if (columnOfThree.every(square => currentColorArrangament[square] === decidedColor)) {\n        columnOfThree.forEach(square => currentColorArrangament[square] = '');\n      }\n    }\n  };\n  const checkForRowOfThree = () => {\n    for (let i = 0; i < 64; i++) {\n      const rowOfThree = [i, i + 1, i + 2];\n      const decidedColor = currentColorArrangament[i];\n      const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64];\n      if (notValid.includes(i)) continue;\n      if (rowOfThree.every(square => currentColorArrangament[square] === decidedColor)) {\n        rowOfThree.forEach(square => currentColorArrangament[square] = '');\n      }\n    }\n  };\n  const moveIntoSquareBelow = () => {\n    for (let i = 0; i < 64 - width; i++) {\n      const firstRow = [0, 1, 2, 3, 4, 5, 6, 7];\n      const isFirstRow = firstRow.includes(i);\n      if (isFirstRow && currentColorArrangament[i] == '') {\n        let randomNumber = Math.floor(Math.random() * candyColors.length);\n        currentColorArrangament[i] = candyColors[randomNumber];\n      }\n      if (currentColorArrangament[i + width] === '') {\n        currentColorArrangament[i + width] = currentColorArrangament[i];\n        currentColorArrangament[i] = '';\n      }\n    }\n  };\n  const dragStart = e => {\n    console.log(e);\n    console.log('drag Start');\n  };\n  const dragDrop = () => {\n    console.log('drag drop');\n  };\n  const dragEnd = () => {\n    console.log('drag end');\n  };\n  const createBoard = () => {\n    const randomColorArrangament = [];\n    for (let i = 0; i < width * width; i++) {\n      const randomNumberfrom0to5 = Math.floor(Math.random() * candyColors.length);\n      const randomColor = candyColors[randomNumberfrom0to5];\n      randomColorArrangament.push(randomColor);\n    }\n    ;\n    setCurrentColorArrangament(randomColorArrangament);\n  };\n  useEffect(() => {\n    createBoard();\n  }, [width]);\n  useEffect(() => {\n    const Timer = setInterval(() => {\n      checkForColumnOfFour();\n      checkForRowOfFour();\n      checkForColumnOfThree();\n      checkForRowOfThree();\n      moveIntoSquareBelow();\n      setCurrentColorArrangament([...currentColorArrangament]);\n    }, 100);\n    return () => clearInterval(Timer);\n  }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangament]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: currentColorArrangament.map((candyColor, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          backgroundColor: candyColor\n        },\n        alt: candyColor,\n        \"data-id\": index,\n        draggable: true,\n        onDragStart: dragStart,\n        onDragOver: e => e.preventDefault(),\n        onDragEnter: e => e.preventDefault(),\n        onDragLeave: e => e.preventDefault(),\n        onDrop: dragDrop,\n        onDragEnd: dragEnd\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"huxjzwzsdnlkoai7YyEgaaIXKTM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","width","candyColors","App","_s","currentColorArrangament","setCurrentColorArrangament","checkForColumnOfFour","i","columnOfFour","decidedColor","every","square","forEach","checkForRowOfFour","rowOfFour","notValid","includes","checkForColumnOfThree","columnOfThree","checkForRowOfThree","rowOfThree","moveIntoSquareBelow","firstRow","isFirstRow","randomNumber","Math","floor","random","length","dragStart","e","console","log","dragDrop","dragEnd","createBoard","randomColorArrangament","randomNumberfrom0to5","randomColor","push","Timer","setInterval","clearInterval","className","children","map","candyColor","index","style","backgroundColor","alt","draggable","onDragStart","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","onDragEnd","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yavuzhanis/Desktop/candyCrush-react/candy-crush/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nconst width = 8\nconst candyColors = [\n  'blue',\n  'green',\n  'yellow',\n  'orange',\n  'red',\n  'purple'\n]\n\nfunction App() {\n  const [currentColorArrangament, setCurrentColorArrangament] = useState([])\n\n\n  const checkForColumnOfFour = () => {\n    for (let i = 0; i < 39; i++) {\n      const columnOfFour = [i, i + width, i + (width * 2), i + (width * 3)]\n      const decidedColor = currentColorArrangament[i]\n\n      if (columnOfFour.every(square => currentColorArrangament[square] === decidedColor)) {\n        columnOfFour.forEach(square => currentColorArrangament[square] = '')\n\n      }\n    }\n  }\n\n  const checkForRowOfFour = () => {\n    for (let i = 0; i < 64; i++) {\n      const rowOfFour = [i, i + 1, i + 2, i + 3]\n      const decidedColor = currentColorArrangament[i]\n      const notValid = [5, 6, 7, 13, 14, 15, 21, 22, 23, 29, 30, 31, 37, 38, 39, 45, 46, 47, 53, 54, 55, 62, 63, 64]\n\n      if (notValid.includes(i)) continue\n\n      if (rowOfFour.every(square => currentColorArrangament[square] === decidedColor)) {\n        rowOfFour.forEach(square => currentColorArrangament[square] = '')\n\n      }\n    }\n  }\n\n  const checkForColumnOfThree = () => {\n    for (let i = 0; i < 47; i++) {\n      const columnOfThree = [i, i + width, i + (width * 2)]\n      const decidedColor = currentColorArrangament[i]\n\n      if (columnOfThree.every(square => currentColorArrangament[square] === decidedColor)) {\n        columnOfThree.forEach(square => currentColorArrangament[square] = '')\n\n      }\n    }\n  }\n  const checkForRowOfThree = () => {\n    for (let i = 0; i < 64; i++) {\n      const rowOfThree = [i, i + 1, i + 2]\n      const decidedColor = currentColorArrangament[i]\n      const notValid = [6, 7, 14, 15, 22, 23, 30, 31, 38, 39, 46, 47, 54, 55, 63, 64]\n\n      if (notValid.includes(i)) continue\n\n      if (rowOfThree.every(square => currentColorArrangament[square] === decidedColor)) {\n        rowOfThree.forEach(square => currentColorArrangament[square] = '')\n\n      }\n    }\n  }\n\n  const moveIntoSquareBelow = () => {\n\n    for (let i = 0; i < 64 - width; i++) {\n      const firstRow = [0, 1, 2, 3, 4, 5, 6, 7]\n      const isFirstRow = firstRow.includes(i)\n\n      if (isFirstRow && currentColorArrangament[i] == '') {\n        let randomNumber = Math.floor(Math.random() * candyColors.length)\n        currentColorArrangament[i] = candyColors[randomNumber]\n      }\n      if ((currentColorArrangament[i + width]) === '') {\n        currentColorArrangament[i + width] = currentColorArrangament[i]\n        currentColorArrangament[i] = ''\n      }\n    }\n\n  }\n  const dragStart = (e) => {\n    console.log(e)\n    console.log('drag Start')\n  }\n  const dragDrop = () => {\n    console.log('drag drop')\n  }\n  const dragEnd = () => {\n    console.log('drag end')\n  }\n\n  const createBoard = () => {\n    const randomColorArrangament = []\n    for (let i = 0; i < width * width; i++) {\n      const randomNumberfrom0to5 = Math.floor(Math.random() * candyColors.length)\n      const randomColor = candyColors[randomNumberfrom0to5]\n      randomColorArrangament.push(randomColor)\n    };\n    setCurrentColorArrangament(randomColorArrangament)\n  };\n  useEffect(() => {\n    createBoard();\n  }, [width]);\n\n  useEffect(() => {\n    const Timer = setInterval(() => {\n      checkForColumnOfFour();\n      checkForRowOfFour();\n      checkForColumnOfThree();\n      checkForRowOfThree();\n      moveIntoSquareBelow();\n      setCurrentColorArrangament([...currentColorArrangament]);\n    }, 100)\n    return () => clearInterval(Timer)\n  }, [checkForColumnOfFour, checkForRowOfFour, checkForColumnOfThree, checkForRowOfThree, moveIntoSquareBelow, currentColorArrangament])\n\n\n  return (\n    <div className=\"App\">\n      <div className='game'>\n        {currentColorArrangament.map((candyColor, index) => (\n          <img\n            key={index}\n            style={{ backgroundColor: candyColor }}\n            alt={candyColor}\n            data-id={index}\n            draggable={true}\n            onDragStart={dragStart}\n            onDragOver={(e) => e.preventDefault()}\n            onDragEnter={(e) => e.preventDefault()}\n            onDragLeave={(e) => e.preventDefault()}\n            onDrop={dragDrop}\n            onDragEnd={dragEnd}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}